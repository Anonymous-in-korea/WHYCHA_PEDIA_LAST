<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.whychapedia.mapper.CommentMapper">
	<select id="commentSelect10" resultType="com.whychapedia.vo.CommentVo">
		select wc.*, (SELECT COUNT(*) FROM comment_like WHERE comment_id = wc.id) AS like_count
		from wcomment wc 
		where movie_id = #{movie_id} and is_blind !=2
		ORDER BY like_count DESC
		FETCH FIRST 10 ROWS ONLY
	</select>
	
	<!-- 해당 영화의 코멘트 총 개수(content page) -->
	<select id="selectCommentAll" resultType="int">
		select count(*) commentCount from wcomment where movie_id = #{movie_id}
	</select>
	
	<!-- 코멘트 1개 가져오기 -->
	<select id="selectCommentOne" resultType="com.whychapedia.vo.CommentVo">
		select wc.*, (SELECT COUNT(*) FROM comment_like WHERE comment_id = wc.id) AS like_count from wcomment wc
		where id = #{comment_id}
	</select>
	
	<!-- 내가 작성한 코멘트 가져오기 -->
	<select id="selectMyCommentOne" resultType="com.whychapedia.vo.CommentVo">
		select * from wcomment where user_id = #{id} and movie_id = #{movie_id}
	</select>

	<!-- 내가 작성한 코멘트 등록하기 -->
	<insert id="myCommentInsert" >
		insert into wcomment values((select coalesce(max(id),0)+1 from wcomment),#{movie_id},#{user_id},#{comment_content},sysdate,1,1)
	</insert>
	
		<!-- 내가 작성한 코멘트 삭제하기 -->
	<delete id="myCommentDelete" >
		delete wcomment where user_id=#{user_id} and movie_id=#{movie_id}
	</delete>
	
		<!-- 내가 작성한 코멘트 수정하기 -->
	<update id="myCommentModify" >
		update wcomment set comment_content = #{comment_content} where user_id = #{user_id} and movie_id = #{movie_id}
	</update>
	
	<!-- 영화 상세페이지에 들어갈 코멘트 2개 가져오기  -->
	<select id="selectCommentTow" resultType="com.whychapedia.vo.CommentVo">
		select wc.*, (SELECT COUNT(*) FROM comment_like WHERE comment_id = wc.id) AS like_count
		from wcomment wc 
		where movie_id = #{movie_id} and is_blind !=2
		ORDER BY like_count DESC
		
		<!-- select wc.*, (SELECT COUNT(*) FROM comment_like WHERE comment_id = wc.id) AS like_count
		from wcomment wc 
		where movie_id = #{movie_id} and is_blind !=2
		ORDER BY like_count DESC
		FETCH FIRST 2 ROWS ONLY -->
	</select>
	
		<!-- 	해당 코멘트 댓글 수 -->
	<select id="replyCount" resultType="int">
		select count(id) as replycount from comment_reply
		where comment_id in (
		<foreach collection="commentId" item="id" separator=",">
			#{id}
		</foreach>
		)
		group by comment_id
	</select>
	
	
</mapper>