<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.whychapedia.mapper.MovieCollectionMapper">
	<!--무비_컬레션 각각의 vo 데리고 오기 즉, 각 컬렉션마다 영화 아이디 불러오기-->
	<select id="selectCollectionVoList" resultType="com.whychapedia.vo.MovieCollectionVo">
			SELECT * FROM movie_collection WHERE collection_id IN (
            <foreach collection="collectionVoList" item="collectionVo" separator=",">
                #{collectionVo.id}
            </foreach>
        )
	</select>
	
	<!--해당 컬렉션-영화 vo 가져오기 (좋아요/코멘트 # 가져옴)-->
	<select id="selectOneCollectionVoList" resultType="com.whychapedia.vo.MovieCollectionVo">
	 	select * from movie_collection where collection_id=#{collection_id} 
	</select>
	
	<!--컬렉션_movie vo 생성 ( collection_id,movie_id,movie_post_url 들어가 있음)-->
	<select id="selectCollectionVoWithMoviePostUrlList" resultType="com.whychapedia.vo.MovieCollectionVo">
		SELECT mc.collection_id, mc.movie_id, m.movie_post_url
			FROM movie_collection mc
			JOIN movie m ON mc.movie_id = m.id
			WHERE mc.collection_id IN
    		<foreach collection="collectionVoList" item="collectionVo" open="(" separator="," close=")">
        	#{collectionVo.id}
    		</foreach>
	</select>
	
	
	<!--업뎃한 콜렉션에 디폴트로 영화 한개 넣기-->
	<insert id="insertDefaultMovie">
	 	INSERT INTO movie_collection values ((select coalesce(max(id),0)+1 from movie_collection), 0, #{collection_id})
	</insert>
	
	<!--해당 컬렉션 속 영화 삭제-->
	<delete id="deleteMovieInCollection">
		delete movie_collection where movie_id=#{movie_id}  and collection_id=#{collectionId} 
	</delete>
	
	<!--해당 컬렉션 속 영화 등록-->
	<insert id="insertMovieInCollection">
	 	INSERT INTO movie_collection values ((select coalesce(max(id),0)+1 from movie_collection), #{movie_id}, #{collectionId} )
	</insert>
	
	<!--컬렉션_movie vo 생성 ( collection_id,movie_id,movie_post_url 들어가 있음)-->
	<select id="selectMovieUlrWithCollectionList" resultType="string">
		SELECT m.movie_post_url
		  FROM Collection c
		  INNER JOIN Movie_Collection mc ON c.id = mc.collection_id
		  INNER JOIN Movie m ON mc.movie_id = m.id
		  WHERE c.id = #{collectionId}
		  ORDER BY m.movie_release_date DESC
		  FETCH FIRST 1 ROWS ONLY
	</select>
</mapper>