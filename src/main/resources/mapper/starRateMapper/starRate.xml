<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <mapper namespace="com.whychapedia.mapper.StarRateMapper">
    <!--별점 높은 영화 #개 가져오기 -->
	<select id="selectMovieTop" resultType="com.whychapedia.vo.StarRateVo">
	 	SELECT movie_id
	    FROM (
	      SELECT movie_id, AVG(score) as avg_score
	      FROM star_rate
	      GROUP BY movie_id
	      ORDER BY avg_score DESC
	    )
	     FETCH FIRST 10 ROWS ONLY
	</select>
  
    <!--해당 영화 해당 user의 별점 가져오기 -->
	<select id="selectMyStarRate" resultType="int">
 		SELECT score from star_rate where user_id=#{user_id} and movie_id=#{movie_id}
	</select>
  
  	<!-- 영화 별점 넣기(처음)-->
	<insert id="insertStarRate" >
		insert into star_rate values (#{id},#{star_rate},#{movie_id},#{user_id},sysdate)
	</insert>
	
	<!-- 평가했는지 안했는지 확인하기-->
	<select id="selectIsRating" resultType="int">
		select count(*) from star_rate where user_id=#{user_id} and movie_id=#{movie_id}
	</select>
	
	<!-- 마지막 고유 번호 가져오기 -->
	<select id="selectLastId" resultType="int">
		 SELECT id FROM (SELECT * FROM star_rate ORDER BY id DESC) WHERE ROWNUM &lt;= 1
	</select>
	
	<!-- 영화 별점 바꾸기-->
	<update id="updateStarRate">
		update star_rate set score=#{star_rate} where user_id=#{user_id} and movie_id=#{movie_id}
	</update>
	
	<!-- 영화 별점 삭제하기-->
	<delete id="deleteStarRate">
		delete star_rate where user_id=#{user_id} and movie_id=#{movie_id}  
	</delete>
	
	<!-- 마지막 고유 번호 가져오기 -->
	<select id="selectStarRateGraph" resultType="int">
		 select count(*) from star_rate where movie_id=#{movie_id} and (score=#{score1} or score=#{score2})
	</select>
  
  
  	<!-- 코멘트 영화 별점 가져오기 -->
	<select id="starRateList" resultType="com.whychapedia.vo.StarRateVo">
		select * from star_rate 
		where user_id in  (
		<foreach collection="commentVolist" item="id" separator=",">
			#{id.user_id}
		</foreach>
		)
	 	and movie_id in (
	 		<foreach collection="commentVolist" item="id" separator=",">
				#{id.movie_id}
			</foreach>
		) 
		ORDER BY 
			case 
				<foreach collection="commentVolist" item="comment" index="index">
					when id = #{comment.user_id} then #{index}
				</foreach>
			end
	</select>
	
	<!-- 코멘트 1개에 대한 영화 별점 가져오기 -->
	<select id="selectStarRateOne" resultType="com.whychapedia.vo.StarRateVo">
		select * from star_rate 
		where user_id =	#{user_id} and movie_id = #{movie_id}
	</select>
	
	<!-- 해당 유저의 영화 별점 가져오기 -->
	<select id="selectStarRateOnePerson" resultType="com.whychapedia.vo.StarRateVo">
		select * from star_rate where user_id =	#{user_id}
	</select>
	
	<!-- 해당 유저의 총 별점 개수/평균 별점 -->
	<select id="selectOnePersonAvgAndTotalCount" resultType="com.whychapedia.vo.StarRateVo">
		SELECT AVG(score) as avg_score, COUNT(*) as total_count
		FROM star_rate
		WHERE user_id = #{user_id}
	</select>
	
	<!-- 해당 유저의 많이 준 별점 반환  -->
	<select id="selectFrequencyScore" resultType="com.whychapedia.vo.StarRateVo">
		SELECT score,COUNT(*) as frequency
			FROM star_rate
			WHERE user_id = #{user_id}
			GROUP BY score
			ORDER BY frequency DESC
			FETCH FIRST 1 ROWS ONLY
	</select>
	
	<!-- 해당 유저의 별점 반환  -->
	<select id="starGraphOfUser" resultType="com.whychapedia.vo.StarRateVo">
		SELECT score,COUNT(*) as frequency
			FROM star_rate
			WHERE user_id = #{user_id}
			GROUP BY score
			ORDER BY frequency DESC
	</select>
	
	<!--해당 유저 유저의 총 감상 시간-->
	<select id="selectTotalWatchedTime" resultType="com.whychapedia.vo.StarRateVo">
 		SELECT SUM(m.movie_running_time) as watched_time_min
			FROM star_rate sr
			JOIN Movie m ON sr.movie_id = m.id
			WHERE sr.user_id =#{user_id} 
	</select>
	
	
	
  </mapper>