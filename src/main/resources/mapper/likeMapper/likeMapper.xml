<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.whychapedia.mapper.LikeMapper">
	<!--좋아요 많이 받은 감독 "theNum"만큼 가져오기 -->
	<select id="selectTopLikeList" resultType="java.lang.Integer">
				select director_id fROM
				(SELECT director_id, COUNT(*) as num_likes 
				FROM director_like
				GROUP BY director_id
				ORDER BY num_likes DESC
				FETCH FIRST #{theNum} ROWS ONLY)
	</select>
	
	<!-- 코멘트 대한 like 가져오기  -->
	<select id="selectCommentLikeList" resultType="com.whychapedia.vo.LikeVo">
		select * fROM comment_like 
		where comment_id in 
			<foreach collection="commentVolist" item="comment" open="(" close=")" separator=",">
				#{comment.id}
			</foreach> 
	</select>
	
	<!-- 코멘트 좋아요 추가 -->
	<insert id="insertLikeOne">
		insert into comment_like(id, comment_id, user_id) values((select coalesce(max(id),0)+1 from comment_like), #{comment_id}, #{user_id})
	</insert>
	
	<!-- 코멘트 좋아요 삭제 -->
	<delete id="deleteLikeOne">
		delete from comment_like where comment_id=#{comment_id} and user_id=#{user_id}
	</delete>
	
	<!-- 코멘트 1개에 대한 좋아요 카운트 -->
	<select id="selectCommentOneLike" resultType="int">
		select count(*) like_count fROM comment_like 
			where comment_id=#{comment.id}
	</select>
	
	<!-- 코멘트 1개에 대한 좋아요Vo list -->
	<select id="selectCommentLikeOne" resultType="com.whychapedia.vo.LikeVo">
		select * fROM comment_like 
			where comment_id=#{comment.id}
	</select>
	
	<!-- 해당 감독 좋아요 추가 -->
	<insert id="insertDirectorLike">
		insert into director_like(id, director_id, user_id) values((select coalesce(max(id),0)+1 from director_like), #{director_id}, #{user_id})
	</insert>
	
	<!-- 해당 감독 좋아요 삭제 -->
	<delete id="deleteDirectorLike">
		delete from director_like where director_id=#{director_id} and user_id=#{user_id}
	</delete>
	
	<!-- 해당감독에 대한 좋아요 카운트 -->
	<select id="selectDirectorLikeList" resultType="int">
		select count(*) like_count fROM director_like 
			where director_id=#{director_id}
	</select>
	
	<!-- 해당배우에 대한 좋아요 총 카운트 -->
	<select id="selectActorLikeList" resultType="int">
		select count(*) like_count fROM actor_like 
			where actor_id=#{actor_id}
	</select>
	
	<!-- 	해당 유저가 해당 배우 좋아요 하는 갯수 가져오기  -->
	<select id="selectActorLikeCount" parameterType="map" resultType="int">
	    SELECT COUNT(*) FROM actor_like
	    WHERE USER_ID = #{user_id} AND ACTOR_ID = #{actor_id}
	</select>
<!-- 	해당 유저가 해당 배우 좋아요 눌렀는지 체크 -->
	<select id="checkActorLike" parameterType="map" resultType="int">
	  SELECT COUNT(*) FROM collection_actor WHERE user_id = #{user_id} AND actor_id = #{actor_id}
	</select>

		<!-- 해당 배우 좋아요 추가 -->
	<insert id="insertActorLike">
		insert into actor_like(id, actor_id, user_id) values((select coalesce(max(id),0)+1 from actor_like), #{actor_id}, #{user_id})
	</insert>
	
	<!-- 해당 배우 좋아요 삭제 -->
	<delete id="deleteActorLike">
		delete from actor_like where actor_id=#{actor_id} and user_id=#{user_id}
	</delete>
	
	<!-- reply 좋아요 추가 -->
	<insert id="insertReplyLike">
		insert into reply_like(id, reply_id, user_id) values((select coalesce(max(id),0)+1 from reply_like), #{reply_id}, #{user_id})
	</insert>
	
	<!-- reply 좋아요 삭제 -->
	<delete id="deleteReplyLike">
		delete from reply_like where reply_id=#{reply_id} and user_id=#{user_id}
	</delete>
	
	<!-- reply 1개에 대한 좋아요 카운트 -->
	<select id="selectReplyLike" resultType="int">
		select count(*) like_count fROM reply_like 
			where reply_id=#{reply_id}
	</select>
	
	<!-- 콜렉션 좋아요 추가 -->
	<insert id="insertCollectionLike">
		insert into collection_like (id, collection_id, user_id) values((select coalesce(max(id),0)+1 from collection_like), #{collection_id}, #{user_id})
	</insert>
	
	<!-- 콜렉션 좋아요 삭제 -->
	<delete id="deleteCollectionLike">
		delete from collection_like where collection_id=#{collection_id} and user_id=#{user_id}
	</delete>

	<!-- 콜렉션에 대한 좋아요 카운트 -->
	<select id="selectCollectionLikeCount" resultType="int">
		select count(*) like_count fROM collection_like 
			where collection_id=#{collection.id}
	</select>

	<!-- 콜렉션에 대한 좋아요 카운트 -->
	<select id="selectCollectionLikeList" resultType="com.whychapedia.vo.LikeVo">
		select * fROM collection_like 
			where collection_id = #{collection.id}
	</select>

</mapper>